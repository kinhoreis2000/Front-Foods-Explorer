name: CI/CD Pipeline for Kind

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - develop

env:
  IMAGE_NAME: my-app  # Name of your Docker image
  IMAGE_TAG: tag      # Default tag for the image

jobs:
  setup-kind:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      - name: Create Kind cluster
        run: |
          kind create cluster --name kind-clusterappfoodexplorer

      - name: Install Calico CNI
        run: |
          kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

      - name: Wait for node to be Ready
        run: |
          timeout 300 bash -c 'while [[ $(kubectl get nodes -o jsonpath="{.items[0].status.conditions[?(@.type==\"Ready\")].status}") != "True" ]]; do sleep 5; done'
          kubectl get nodes

      - name: Check Calico logs
        run: |
          kubectl logs -n kube-system -l k8s-app=calico-node

  build:
    runs-on: ubuntu-latest
    needs: setup-kind  # Wait for the Kind cluster to be created

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Instalar dependências
        run: npm install

      - name: Rodar Linter
        run: |
          npm install --save-dev eslint
          npm run lint
        continue-on-error: true

      - name: Rodar Testes
        run: |
          npm install --save-dev jest
          npm run test
        continue-on-error: true

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Load Docker image into Kind cluster
        run: |
          kind load docker-image $IMAGE_NAME:$IMAGE_TAG --name kind-clusterappfoodexplorer

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Wait for the build job to complete

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Deploy to Kind cluster
        run: |
          # Apply Kubernetes manifests to deploy the application
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml

      - name: Verify deployment
        run: |
          kubectl get pods -o wide
          kubectl get svc